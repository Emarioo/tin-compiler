/*
    This file uses most of the features in the language
*/

struct Array {
    ptr: Location*,
    size: int,
    capacity: int
}
struct Location {
    start: int,
    end: int,
}

fun strlen(str: char*): int {
    length: int; // zero initialized
    while str[length] {
        length++;
    }
    return length;
}
fun find_string(str: char*, text: char*, text_size: int): Array {
    str_length: int = strlen(str);
    index: int;
    correct: int;
    array: Array;
    array.ptr = cast Location*  malloc(sizeof Location * 100);
    array.size = 0;
    array.capacity = 100;
    while index < text_size {
        if str[correct] == text[index] {
            correct++;
            if correct == str_length {
                correct = 0;
                array.ptr[array.size].end = index + 1;
                array.size++;
            }
        } else {
            array.ptr[array.size].start = index+1;
            correct = 0;
        }
        index++;
    }
    return array;
}

fun main() {

    // printi(strlen("okay"));

    // arr: Array;
    // arr.ptr[5].start;

    text: char*;
    size: int;
    read_file("tests/feature_set.tin", &text, &size);

    arr: Array = find_string("int",text,size);

    // printi(arr.size);
    // i: int;
    // while i < arr.len {
    //     printi()




    // }

    // mfree(text)
}